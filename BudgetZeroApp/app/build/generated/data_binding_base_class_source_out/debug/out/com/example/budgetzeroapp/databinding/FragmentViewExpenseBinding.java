// Generated by view binder compiler. Do not edit!
package com.example.budgetzeroapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.budgetzeroapp.R;
import com.google.android.material.appbar.AppBarLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentViewExpenseBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final AppBarLayout appBarLayout;

  @NonNull
  public final Button editButton;

  @NonNull
  public final ConstraintLayout scrollView1;

  @NonNull
  public final TextView textViewExpAmount;

  @NonNull
  public final TextView textViewExpAmountEntry;

  @NonNull
  public final TextView textViewExpDate;

  @NonNull
  public final TextView textViewExpDateEntry;

  @NonNull
  public final TextView textViewExpName;

  @NonNull
  public final TextView textViewExpNameEntry;

  @NonNull
  public final TextView textViewExpStable;

  @NonNull
  public final TextView textViewExpStableEntry;

  @NonNull
  public final TextView textViewExpType;

  @NonNull
  public final TextView textViewExpTypeEntry;

  private FragmentViewExpenseBinding(@NonNull ConstraintLayout rootView,
      @NonNull AppBarLayout appBarLayout, @NonNull Button editButton,
      @NonNull ConstraintLayout scrollView1, @NonNull TextView textViewExpAmount,
      @NonNull TextView textViewExpAmountEntry, @NonNull TextView textViewExpDate,
      @NonNull TextView textViewExpDateEntry, @NonNull TextView textViewExpName,
      @NonNull TextView textViewExpNameEntry, @NonNull TextView textViewExpStable,
      @NonNull TextView textViewExpStableEntry, @NonNull TextView textViewExpType,
      @NonNull TextView textViewExpTypeEntry) {
    this.rootView = rootView;
    this.appBarLayout = appBarLayout;
    this.editButton = editButton;
    this.scrollView1 = scrollView1;
    this.textViewExpAmount = textViewExpAmount;
    this.textViewExpAmountEntry = textViewExpAmountEntry;
    this.textViewExpDate = textViewExpDate;
    this.textViewExpDateEntry = textViewExpDateEntry;
    this.textViewExpName = textViewExpName;
    this.textViewExpNameEntry = textViewExpNameEntry;
    this.textViewExpStable = textViewExpStable;
    this.textViewExpStableEntry = textViewExpStableEntry;
    this.textViewExpType = textViewExpType;
    this.textViewExpTypeEntry = textViewExpTypeEntry;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentViewExpenseBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentViewExpenseBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_view_expense, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentViewExpenseBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.appBarLayout;
      AppBarLayout appBarLayout = ViewBindings.findChildViewById(rootView, id);
      if (appBarLayout == null) {
        break missingId;
      }

      id = R.id.editButton;
      Button editButton = ViewBindings.findChildViewById(rootView, id);
      if (editButton == null) {
        break missingId;
      }

      ConstraintLayout scrollView1 = (ConstraintLayout) rootView;

      id = R.id.textViewExpAmount;
      TextView textViewExpAmount = ViewBindings.findChildViewById(rootView, id);
      if (textViewExpAmount == null) {
        break missingId;
      }

      id = R.id.textViewExpAmountEntry;
      TextView textViewExpAmountEntry = ViewBindings.findChildViewById(rootView, id);
      if (textViewExpAmountEntry == null) {
        break missingId;
      }

      id = R.id.textViewExpDate;
      TextView textViewExpDate = ViewBindings.findChildViewById(rootView, id);
      if (textViewExpDate == null) {
        break missingId;
      }

      id = R.id.textViewExpDateEntry;
      TextView textViewExpDateEntry = ViewBindings.findChildViewById(rootView, id);
      if (textViewExpDateEntry == null) {
        break missingId;
      }

      id = R.id.textViewExpName;
      TextView textViewExpName = ViewBindings.findChildViewById(rootView, id);
      if (textViewExpName == null) {
        break missingId;
      }

      id = R.id.textViewExpNameEntry;
      TextView textViewExpNameEntry = ViewBindings.findChildViewById(rootView, id);
      if (textViewExpNameEntry == null) {
        break missingId;
      }

      id = R.id.textViewExpStable;
      TextView textViewExpStable = ViewBindings.findChildViewById(rootView, id);
      if (textViewExpStable == null) {
        break missingId;
      }

      id = R.id.textViewExpStableEntry;
      TextView textViewExpStableEntry = ViewBindings.findChildViewById(rootView, id);
      if (textViewExpStableEntry == null) {
        break missingId;
      }

      id = R.id.textViewExpType;
      TextView textViewExpType = ViewBindings.findChildViewById(rootView, id);
      if (textViewExpType == null) {
        break missingId;
      }

      id = R.id.textViewExpTypeEntry;
      TextView textViewExpTypeEntry = ViewBindings.findChildViewById(rootView, id);
      if (textViewExpTypeEntry == null) {
        break missingId;
      }

      return new FragmentViewExpenseBinding((ConstraintLayout) rootView, appBarLayout, editButton,
          scrollView1, textViewExpAmount, textViewExpAmountEntry, textViewExpDate,
          textViewExpDateEntry, textViewExpName, textViewExpNameEntry, textViewExpStable,
          textViewExpStableEntry, textViewExpType, textViewExpTypeEntry);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
